//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace Mediinfo.WinForm.HIS.Main.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IXHLisWebServicebinding", Namespace="http://tempuri.org/")]
    public partial class IXHLisWebServiceservice : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GatherSpecimenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmountOfTubeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LisDataPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback LisDataRePrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IXHLisWebServiceservice() {
            this.Url = global::Mediinfo.WinForm.HIS.Main.Properties.Settings.Default.Mediinfo_WinForm_HIS_Main_WebReference_IXHLisWebServiceservice;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GatherSpecimenCompletedEventHandler GatherSpecimenCompleted;
        
        /// <remarks/>
        public event GetAmountOfTubeCompletedEventHandler GetAmountOfTubeCompleted;
        
        /// <remarks/>
        public event LisDataPrintCompletedEventHandler LisDataPrintCompleted;
        
        /// <remarks/>
        public event LisDataRePrintCompletedEventHandler LisDataRePrintCompleted;
        
        /// <remarks/>
        public event RefundCompletedEventHandler RefundCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:XHLisWebServiceIntf-IXHLisWebService#GatherSpecimen", RequestNamespace="urn:XHLisWebServiceIntf-IXHLisWebService", ResponseNamespace="urn:XHLisWebServiceIntf-IXHLisWebService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GatherSpecimen(string Data) {
            object[] results = this.Invoke("GatherSpecimen", new object[] {
                        Data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GatherSpecimenAsync(string Data) {
            this.GatherSpecimenAsync(Data, null);
        }
        
        /// <remarks/>
        public void GatherSpecimenAsync(string Data, object userState) {
            if ((this.GatherSpecimenOperationCompleted == null)) {
                this.GatherSpecimenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGatherSpecimenOperationCompleted);
            }
            this.InvokeAsync("GatherSpecimen", new object[] {
                        Data}, this.GatherSpecimenOperationCompleted, userState);
        }
        
        private void OnGatherSpecimenOperationCompleted(object arg) {
            if ((this.GatherSpecimenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GatherSpecimenCompleted(this, new GatherSpecimenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:XHLisWebServiceIntf-IXHLisWebService#GetAmountOfTube", RequestNamespace="urn:XHLisWebServiceIntf-IXHLisWebService", ResponseNamespace="urn:XHLisWebServiceIntf-IXHLisWebService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetAmountOfTube(string Data) {
            object[] results = this.Invoke("GetAmountOfTube", new object[] {
                        Data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAmountOfTubeAsync(string Data) {
            this.GetAmountOfTubeAsync(Data, null);
        }
        
        /// <remarks/>
        public void GetAmountOfTubeAsync(string Data, object userState) {
            if ((this.GetAmountOfTubeOperationCompleted == null)) {
                this.GetAmountOfTubeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmountOfTubeOperationCompleted);
            }
            this.InvokeAsync("GetAmountOfTube", new object[] {
                        Data}, this.GetAmountOfTubeOperationCompleted, userState);
        }
        
        private void OnGetAmountOfTubeOperationCompleted(object arg) {
            if ((this.GetAmountOfTubeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmountOfTubeCompleted(this, new GetAmountOfTubeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:XHLisWebServiceIntf-IXHLisWebService#LisDataPrint", RequestNamespace="urn:XHLisWebServiceIntf-IXHLisWebService", ResponseNamespace="urn:XHLisWebServiceIntf-IXHLisWebService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string LisDataPrint(string Data) {
            object[] results = this.Invoke("LisDataPrint", new object[] {
                        Data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LisDataPrintAsync(string Data) {
            this.LisDataPrintAsync(Data, null);
        }
        
        /// <remarks/>
        public void LisDataPrintAsync(string Data, object userState) {
            if ((this.LisDataPrintOperationCompleted == null)) {
                this.LisDataPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLisDataPrintOperationCompleted);
            }
            this.InvokeAsync("LisDataPrint", new object[] {
                        Data}, this.LisDataPrintOperationCompleted, userState);
        }
        
        private void OnLisDataPrintOperationCompleted(object arg) {
            if ((this.LisDataPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LisDataPrintCompleted(this, new LisDataPrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:XHLisWebServiceIntf-IXHLisWebService#LisDataRePrint", RequestNamespace="urn:XHLisWebServiceIntf-IXHLisWebService", ResponseNamespace="urn:XHLisWebServiceIntf-IXHLisWebService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string LisDataRePrint(string Data) {
            object[] results = this.Invoke("LisDataRePrint", new object[] {
                        Data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LisDataRePrintAsync(string Data) {
            this.LisDataRePrintAsync(Data, null);
        }
        
        /// <remarks/>
        public void LisDataRePrintAsync(string Data, object userState) {
            if ((this.LisDataRePrintOperationCompleted == null)) {
                this.LisDataRePrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLisDataRePrintOperationCompleted);
            }
            this.InvokeAsync("LisDataRePrint", new object[] {
                        Data}, this.LisDataRePrintOperationCompleted, userState);
        }
        
        private void OnLisDataRePrintOperationCompleted(object arg) {
            if ((this.LisDataRePrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LisDataRePrintCompleted(this, new LisDataRePrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:XHLisWebServiceIntf-IXHLisWebService#Refund", RequestNamespace="urn:XHLisWebServiceIntf-IXHLisWebService", ResponseNamespace="urn:XHLisWebServiceIntf-IXHLisWebService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Refund(string Data) {
            object[] results = this.Invoke("Refund", new object[] {
                        Data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RefundAsync(string Data) {
            this.RefundAsync(Data, null);
        }
        
        /// <remarks/>
        public void RefundAsync(string Data, object userState) {
            if ((this.RefundOperationCompleted == null)) {
                this.RefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundOperationCompleted);
            }
            this.InvokeAsync("Refund", new object[] {
                        Data}, this.RefundOperationCompleted, userState);
        }
        
        private void OnRefundOperationCompleted(object arg) {
            if ((this.RefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundCompleted(this, new RefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GatherSpecimenCompletedEventHandler(object sender, GatherSpecimenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GatherSpecimenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GatherSpecimenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAmountOfTubeCompletedEventHandler(object sender, GetAmountOfTubeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmountOfTubeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmountOfTubeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LisDataPrintCompletedEventHandler(object sender, LisDataPrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LisDataPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LisDataPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LisDataRePrintCompletedEventHandler(object sender, LisDataRePrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LisDataRePrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LisDataRePrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RefundCompletedEventHandler(object sender, RefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591